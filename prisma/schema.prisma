// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  age            Int
  name           String
  email          String
  // isAdmin        Boolean -- can be replaced with enum roles
  role           Role @default(BASIC) //basic user
  // preferences    Json
  // blob           Bytes
  // blob2          Unsupported("")
  writtenPosts   Post[]          @relation("WrittenPosts")
  favoritePosts  Post[]          @relation("FavoritePosts")
  userPreference UserPreference?

  @@unique([age, name]) // cannot have two users with same age and name
  @@index([email]) // index for emails for faster search
}

//one to many relations and multiple one to many
model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  categories    Category[]

  // @@id([title,authorId]) - here we are saying that out title and authorId together are unique i.e., they represent together an id
}

//many to many - automatically prismaa joins tables for us in this 
model Category {
  id    String @id @default(uuid())
  posts Post[]
  name  String @unique
}

// one to one

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

enum Role {
  BASIC
  EDITOR
  ADMIN
}
